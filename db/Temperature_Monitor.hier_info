|test
a <= segments_controller:inst.a
clock_50Mhz => lm75:inst7.clk
clock_50Mhz => segments_controller:inst.clock
clock_50Mhz => lcd:inst8.clk
clock_50Mhz => buzzer_controller:instX.clk
sda <> lm75:inst7.sda
b <= segments_controller:inst.b
c <= segments_controller:inst.c
d <= segments_controller:inst.d
e <= segments_controller:inst.e
f <= segments_controller:inst.f
g <= segments_controller:inst.g
scl <= lm75:inst7.scl
ponto <= segments_controller:inst.point
D1_Anodo <= segments_controller:inst.D1_anode
D2_Anodo <= segments_controller:inst.D2_anode
D3_Anodo <= segments_controller:inst.D3_anode
D4_Anodo <= segments_controller:inst.D4_anode
Rs <= lcd:inst8.RS
Rw <= lcd:inst8.RW
Db0 <= lcd:inst8.DB[0]
Db1 <= lcd:inst8.DB[1]
Db2 <= lcd:inst8.DB[2]
Db3 <= lcd:inst8.DB[3]
Db4 <= lcd:inst8.DB[4]
Db5 <= lcd:inst8.DB[5]
Db6 <= lcd:inst8.DB[6]
Db7 <= lcd:inst8.DB[7]
buzzer <= buzzer_controller:instX.sinal
E_pin <> lcd:inst8.E


|test|segments_controller:inst
D2_anode <= anode[1].DB_MAX_OUTPUT_PORT_TYPE
clock => refresh_clock_10kHz:inst.clk
D3_anode <= anode[2].DB_MAX_OUTPUT_PORT_TYPE
D4_anode <= anode[3].DB_MAX_OUTPUT_PORT_TYPE
D1_anode <= anode[0].DB_MAX_OUTPUT_PORT_TYPE
point <= bcd_7seg:inst5.ponto
D1_3 => bcd_control:inst3.display1[3]
D1_2 => bcd_control:inst3.display1[2]
D1_1 => bcd_control:inst3.display1[1]
D1_0 => bcd_control:inst3.display1[0]
D2_3 => bcd_control:inst3.display2[3]
D2_2 => bcd_control:inst3.display2[2]
D2_1 => bcd_control:inst3.display2[1]
D2_0 => bcd_control:inst3.display2[0]
D3_3 => bcd_control:inst3.display3[3]
D3_2 => bcd_control:inst3.display3[2]
D3_1 => bcd_control:inst3.display3[1]
D3_0 => bcd_control:inst3.display3[0]
a <= inst9.DB_MAX_OUTPUT_PORT_TYPE
b <= inst8.DB_MAX_OUTPUT_PORT_TYPE
c <= inst6.DB_MAX_OUTPUT_PORT_TYPE
d <= inst11.DB_MAX_OUTPUT_PORT_TYPE
e <= inst12.DB_MAX_OUTPUT_PORT_TYPE
f <= inst13.DB_MAX_OUTPUT_PORT_TYPE
g <= inst14.DB_MAX_OUTPUT_PORT_TYPE


|test|segments_controller:inst|anode_control:inst2
sel[0] => Decoder0.IN1
sel[1] => Decoder0.IN0
dot <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
anode[0] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
anode[1] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
anode[2] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
anode[3] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE


|test|segments_controller:inst|refresh_counter:inst1
clock => out[0]~reg0.CLK
clock => out[1]~reg0.CLK
out[0] <= out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|segments_controller:inst|refresh_clock_10kHz:inst
clk => clock~reg0.CLK
clk => cont[0].CLK
clk => cont[1].CLK
clk => cont[2].CLK
clk => cont[3].CLK
clk => cont[4].CLK
clk => cont[5].CLK
clk => cont[6].CLK
clk => cont[7].CLK
clk => cont[8].CLK
clk => cont[9].CLK
clk => cont[10].CLK
clk => cont[11].CLK
clock <= clock~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|segments_controller:inst|bcd_7seg:inst5
bin[0] => Mux0.IN19
bin[0] => Mux1.IN19
bin[0] => Mux2.IN19
bin[0] => Mux3.IN19
bin[0] => Mux4.IN19
bin[0] => Mux5.IN19
bin[0] => Mux6.IN19
bin[0] => Mux7.IN19
bin[1] => Mux0.IN18
bin[1] => Mux1.IN18
bin[1] => Mux2.IN18
bin[1] => Mux3.IN18
bin[1] => Mux4.IN18
bin[1] => Mux5.IN18
bin[1] => Mux6.IN18
bin[1] => Mux7.IN18
bin[2] => Mux0.IN17
bin[2] => Mux1.IN17
bin[2] => Mux2.IN17
bin[2] => Mux3.IN17
bin[2] => Mux4.IN17
bin[2] => Mux5.IN17
bin[2] => Mux6.IN17
bin[2] => Mux7.IN17
bin[3] => Mux0.IN16
bin[3] => Mux1.IN16
bin[3] => Mux2.IN16
bin[3] => Mux3.IN16
bin[3] => Mux4.IN16
bin[3] => Mux5.IN16
bin[3] => Mux6.IN16
bin[3] => Mux7.IN16
dot => ponto.DATAIN
display[0] <= display[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
display[1] <= display[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
display[2] <= display[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
display[3] <= display[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
display[4] <= display[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
display[5] <= display[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
display[6] <= display[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
ponto <= dot.DB_MAX_OUTPUT_PORT_TYPE


|test|segments_controller:inst|bcd_control:inst3
display1[0] => Mux3.IN0
display1[1] => Mux2.IN0
display1[2] => Mux1.IN0
display1[3] => Mux0.IN0
display2[0] => Mux3.IN1
display2[1] => Mux2.IN1
display2[2] => Mux1.IN1
display2[3] => Mux0.IN1
display3[0] => Mux3.IN2
display3[1] => Mux2.IN2
display3[2] => Mux1.IN2
display3[3] => Mux0.IN2
display4[0] => Mux3.IN3
display4[1] => Mux2.IN3
display4[2] => Mux1.IN3
display4[3] => Mux0.IN3
sel[0] => Mux0.IN5
sel[0] => Mux1.IN5
sel[0] => Mux2.IN5
sel[0] => Mux3.IN5
sel[1] => Mux0.IN4
sel[1] => Mux1.IN4
sel[1] => Mux2.IN4
sel[1] => Mux3.IN4
saida[0] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
saida[1] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
saida[2] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
saida[3] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|test|lm75:inst7
clk => clk.IN2
rst_n => rst_n.IN2
scl <= I2C_READ:I2C_READ.scl
sda <> I2C_READ:I2C_READ.sda
cs[0] <= SEG_D:SEG_D.cs
cs[1] <= SEG_D:SEG_D.cs
cs[2] <= SEG_D:SEG_D.cs
cs[3] <= SEG_D:SEG_D.cs
seg[0] <= SEG_D:SEG_D.seg
seg[1] <= SEG_D:SEG_D.seg
seg[2] <= SEG_D:SEG_D.seg
seg[3] <= SEG_D:SEG_D.seg
seg[4] <= SEG_D:SEG_D.seg
seg[5] <= SEG_D:SEG_D.seg
seg[6] <= SEG_D:SEG_D.seg
seg[7] <= SEG_D:SEG_D.seg
d1[0] <= SEG_D:SEG_D.dezena
d1[1] <= SEG_D:SEG_D.dezena
d1[2] <= SEG_D:SEG_D.dezena
d1[3] <= SEG_D:SEG_D.dezena
d2[0] <= SEG_D:SEG_D.unidade
d2[1] <= SEG_D:SEG_D.unidade
d2[2] <= SEG_D:SEG_D.unidade
d2[3] <= SEG_D:SEG_D.unidade
d3[0] <= SEG_D:SEG_D.lsb
d3[1] <= SEG_D:SEG_D.lsb
d3[2] <= SEG_D:SEG_D.lsb
d3[3] <= SEG_D:SEG_D.lsb
visor_lcd[0] <= SEG_D:SEG_D.lcd_sel
visor_lcd[1] <= SEG_D:SEG_D.lcd_sel


|test|lm75:inst7|I2C_READ:I2C_READ
clk => data_cnt[0].CLK
clk => data_cnt[1].CLK
clk => data_cnt[2].CLK
clk => data_cnt[3].CLK
clk => address_reg[0].CLK
clk => address_reg[1].CLK
clk => address_reg[2].CLK
clk => address_reg[3].CLK
clk => address_reg[4].CLK
clk => address_reg[5].CLK
clk => address_reg[6].CLK
clk => address_reg[7].CLK
clk => sda_link.CLK
clk => sda_r.CLK
clk => data_r[0].CLK
clk => data_r[1].CLK
clk => data_r[2].CLK
clk => data_r[3].CLK
clk => data_r[4].CLK
clk => data_r[5].CLK
clk => data_r[6].CLK
clk => data_r[7].CLK
clk => data_r[8].CLK
clk => data_r[9].CLK
clk => data_r[10].CLK
clk => data_r[11].CLK
clk => data_r[12].CLK
clk => data_r[13].CLK
clk => data_r[14].CLK
clk => data_r[15].CLK
clk => timer_cnt[0].CLK
clk => timer_cnt[1].CLK
clk => timer_cnt[2].CLK
clk => timer_cnt[3].CLK
clk => timer_cnt[4].CLK
clk => timer_cnt[5].CLK
clk => timer_cnt[6].CLK
clk => timer_cnt[7].CLK
clk => timer_cnt[8].CLK
clk => timer_cnt[9].CLK
clk => timer_cnt[10].CLK
clk => timer_cnt[11].CLK
clk => timer_cnt[12].CLK
clk => timer_cnt[13].CLK
clk => timer_cnt[14].CLK
clk => timer_cnt[15].CLK
clk => timer_cnt[16].CLK
clk => timer_cnt[17].CLK
clk => timer_cnt[18].CLK
clk => timer_cnt[19].CLK
clk => timer_cnt[20].CLK
clk => timer_cnt[21].CLK
clk => timer_cnt[22].CLK
clk => timer_cnt[23].CLK
clk => timer_cnt[24].CLK
clk => timer_cnt[25].CLK
clk => scl~reg0.CLK
clk => scl_cnt[0].CLK
clk => scl_cnt[1].CLK
clk => scl_cnt[2].CLK
clk => scl_cnt[3].CLK
clk => scl_cnt[4].CLK
clk => scl_cnt[5].CLK
clk => scl_cnt[6].CLK
clk => scl_cnt[7].CLK
clk => state~10.DATAIN
clk => cnt~1.DATAIN
rst_n => data_cnt[0].ACLR
rst_n => data_cnt[1].ACLR
rst_n => data_cnt[2].ACLR
rst_n => data_cnt[3].ACLR
rst_n => address_reg[0].ACLR
rst_n => address_reg[1].ACLR
rst_n => address_reg[2].ACLR
rst_n => address_reg[3].ACLR
rst_n => address_reg[4].ACLR
rst_n => address_reg[5].ACLR
rst_n => address_reg[6].ACLR
rst_n => address_reg[7].ACLR
rst_n => sda_link.PRESET
rst_n => sda_r.PRESET
rst_n => data_r[0].ACLR
rst_n => data_r[1].ACLR
rst_n => data_r[2].ACLR
rst_n => data_r[3].ACLR
rst_n => data_r[4].ACLR
rst_n => data_r[5].ACLR
rst_n => data_r[6].ACLR
rst_n => data_r[7].ACLR
rst_n => data_r[8].ACLR
rst_n => data_r[9].ACLR
rst_n => data_r[10].ACLR
rst_n => data_r[11].ACLR
rst_n => data_r[12].ACLR
rst_n => data_r[13].ACLR
rst_n => data_r[14].ACLR
rst_n => data_r[15].ACLR
rst_n => scl~reg0.ACLR
rst_n => scl_cnt[0].ACLR
rst_n => scl_cnt[1].ACLR
rst_n => scl_cnt[2].ACLR
rst_n => scl_cnt[3].ACLR
rst_n => scl_cnt[4].ACLR
rst_n => scl_cnt[5].ACLR
rst_n => scl_cnt[6].ACLR
rst_n => scl_cnt[7].ACLR
rst_n => timer_cnt[0].ACLR
rst_n => timer_cnt[1].ACLR
rst_n => timer_cnt[2].ACLR
rst_n => timer_cnt[3].ACLR
rst_n => timer_cnt[4].ACLR
rst_n => timer_cnt[5].ACLR
rst_n => timer_cnt[6].ACLR
rst_n => timer_cnt[7].ACLR
rst_n => timer_cnt[8].ACLR
rst_n => timer_cnt[9].ACLR
rst_n => timer_cnt[10].ACLR
rst_n => timer_cnt[11].ACLR
rst_n => timer_cnt[12].ACLR
rst_n => timer_cnt[13].ACLR
rst_n => timer_cnt[14].ACLR
rst_n => timer_cnt[15].ACLR
rst_n => timer_cnt[16].ACLR
rst_n => timer_cnt[17].ACLR
rst_n => timer_cnt[18].ACLR
rst_n => timer_cnt[19].ACLR
rst_n => timer_cnt[20].ACLR
rst_n => timer_cnt[21].ACLR
rst_n => timer_cnt[22].ACLR
rst_n => timer_cnt[23].ACLR
rst_n => timer_cnt[24].ACLR
rst_n => timer_cnt[25].ACLR
rst_n => state~12.DATAIN
rst_n => cnt~3.DATAIN
scl <= scl~reg0.DB_MAX_OUTPUT_PORT_TYPE
sda <> sda
data[0] <= data_r[0].DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data_r[1].DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data_r[2].DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data_r[3].DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data_r[4].DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data_r[5].DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data_r[6].DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data_r[7].DB_MAX_OUTPUT_PORT_TYPE
data[8] <= data_r[8].DB_MAX_OUTPUT_PORT_TYPE
data[9] <= data_r[9].DB_MAX_OUTPUT_PORT_TYPE
data[10] <= data_r[10].DB_MAX_OUTPUT_PORT_TYPE
data[11] <= data_r[11].DB_MAX_OUTPUT_PORT_TYPE
data[12] <= data_r[12].DB_MAX_OUTPUT_PORT_TYPE
data[13] <= data_r[13].DB_MAX_OUTPUT_PORT_TYPE
data[14] <= data_r[14].DB_MAX_OUTPUT_PORT_TYPE
data[15] <= data_r[15].DB_MAX_OUTPUT_PORT_TYPE


|test|lm75:inst7|SEG_D:SEG_D
clk => disp_dat[0].CLK
clk => disp_dat[1].CLK
clk => delay_cnt[0].CLK
clk => delay_cnt[1].CLK
clk => delay_cnt[2].CLK
clk => delay_cnt[3].CLK
clk => delay_cnt[4].CLK
clk => delay_cnt[5].CLK
clk => delay_cnt[6].CLK
clk => delay_cnt[7].CLK
clk => delay_cnt[8].CLK
clk => delay_cnt[9].CLK
clk => delay_cnt[10].CLK
clk => delay_cnt[11].CLK
clk => delay_cnt[12].CLK
clk => delay_cnt[13].CLK
clk => delay_cnt[14].CLK
clk => delay_cnt[15].CLK
clk => delay_cnt[16].CLK
rst_n => delay_cnt[0].ACLR
rst_n => delay_cnt[1].ACLR
rst_n => delay_cnt[2].ACLR
rst_n => delay_cnt[3].ACLR
rst_n => delay_cnt[4].ACLR
rst_n => delay_cnt[5].ACLR
rst_n => delay_cnt[6].ACLR
rst_n => delay_cnt[7].ACLR
rst_n => delay_cnt[8].ACLR
rst_n => delay_cnt[9].ACLR
rst_n => delay_cnt[10].ACLR
rst_n => delay_cnt[11].ACLR
rst_n => delay_cnt[12].ACLR
rst_n => delay_cnt[13].ACLR
rst_n => delay_cnt[14].ACLR
rst_n => delay_cnt[15].ACLR
rst_n => delay_cnt[16].ACLR
rst_n => disp_dat[0].ACLR
rst_n => disp_dat[1].ACLR
seg[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
seg[7] <= <VCC>
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
data[4] => ~NO_FANOUT~
data[5] => Mux3.IN4
data[6] => Mux2.IN4
data[7] => always3.IN1
data[7] => always3.IN1
data[7] => lsb[2].DATAIN
data[7] => lsb[0].DATAIN
data[7] => always3.IN1
data[7] => always3.IN1
data[7] => Mux1.IN4
data[8] => Mod0.IN9
data[8] => Div0.IN9
data[8] => LessThan0.IN12
data[8] => LessThan1.IN12
data[8] => LessThan2.IN12
data[8] => LessThan3.IN12
data[8] => Equal1.IN31
data[8] => Equal2.IN2
data[8] => Mux0.IN5
data[9] => Mod0.IN8
data[9] => Div0.IN8
data[9] => LessThan0.IN11
data[9] => LessThan1.IN11
data[9] => LessThan2.IN11
data[9] => LessThan3.IN11
data[9] => Equal1.IN30
data[9] => Equal2.IN1
data[9] => Mux3.IN3
data[10] => Mod0.IN7
data[10] => Div0.IN7
data[10] => LessThan0.IN10
data[10] => LessThan1.IN10
data[10] => LessThan2.IN10
data[10] => LessThan3.IN10
data[10] => Equal1.IN29
data[10] => Equal2.IN31
data[10] => Mux2.IN3
data[11] => Mod0.IN6
data[11] => Div0.IN6
data[11] => LessThan0.IN9
data[11] => LessThan1.IN9
data[11] => LessThan2.IN9
data[11] => LessThan3.IN9
data[11] => Equal1.IN28
data[11] => Equal2.IN30
data[11] => Mux1.IN3
data[12] => Mod0.IN5
data[12] => Div0.IN5
data[12] => LessThan0.IN8
data[12] => LessThan1.IN8
data[12] => LessThan2.IN8
data[12] => LessThan3.IN8
data[12] => Equal1.IN27
data[12] => Equal2.IN29
data[12] => Mux0.IN4
data[13] => Mod0.IN4
data[13] => Div0.IN4
data[13] => LessThan0.IN7
data[13] => LessThan1.IN7
data[13] => LessThan2.IN7
data[13] => LessThan3.IN7
data[13] => Equal1.IN0
data[13] => Equal2.IN0
data[13] => Mux3.IN2
data[14] => Mux2.IN2
data[15] => Mux1.IN2
cs[0] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
cs[1] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
cs[2] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
cs[3] <= <VCC>
dezena[0] <= Mod1.DB_MAX_OUTPUT_PORT_TYPE
dezena[1] <= Mod1.DB_MAX_OUTPUT_PORT_TYPE
dezena[2] <= Mod1.DB_MAX_OUTPUT_PORT_TYPE
dezena[3] <= Mod1.DB_MAX_OUTPUT_PORT_TYPE
unidade[0] <= Mod0.DB_MAX_OUTPUT_PORT_TYPE
unidade[1] <= Mod0.DB_MAX_OUTPUT_PORT_TYPE
unidade[2] <= Mod0.DB_MAX_OUTPUT_PORT_TYPE
unidade[3] <= Mod0.DB_MAX_OUTPUT_PORT_TYPE
lsb[0] <= data[7].DB_MAX_OUTPUT_PORT_TYPE
lsb[1] <= <GND>
lsb[2] <= data[7].DB_MAX_OUTPUT_PORT_TYPE
lsb[3] <= <GND>
lcd_sel[0] <= lcd_sel[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
lcd_sel[1] <= lcd_sel[1]$latch.DB_MAX_OUTPUT_PORT_TYPE


|test|lcd:inst8
D1[0] => Selector7.IN4
D1[1] => Selector6.IN4
D1[2] => Selector5.IN4
D1[3] => Selector4.IN4
D1[4] => Selector3.IN4
D1[5] => Selector2.IN4
D1[6] => Selector1.IN4
D1[7] => Selector0.IN4
D2[0] => Selector7.IN5
D2[1] => Selector6.IN5
D2[2] => Selector5.IN5
D2[3] => Selector4.IN5
D2[4] => Selector3.IN5
D2[5] => Selector2.IN5
D2[6] => Selector1.IN5
D2[7] => Selector0.IN5
D3[0] => Selector7.IN6
D3[1] => Selector6.IN6
D3[2] => Selector5.IN6
D3[3] => Selector4.IN6
D3[4] => Selector3.IN6
D3[5] => Selector2.IN6
D3[6] => Selector1.IN6
D3[7] => Selector0.IN6
D4[0] => Selector7.IN7
D4[1] => Selector6.IN7
D4[2] => Selector5.IN7
D4[3] => Selector4.IN7
D4[4] => Selector3.IN7
D4[5] => Selector2.IN7
D4[6] => Selector1.IN7
D4[7] => Selector0.IN7
D5[0] => Selector7.IN8
D5[1] => Selector6.IN8
D5[2] => Selector5.IN8
D5[3] => Selector4.IN8
D5[4] => Selector3.IN8
D5[5] => Selector2.IN8
D5[6] => Selector1.IN8
D5[7] => Selector0.IN8
D6[0] => Selector7.IN9
D6[1] => Selector6.IN9
D6[2] => Selector5.IN9
D6[3] => Selector4.IN9
D6[4] => Selector3.IN9
D6[5] => Selector2.IN9
D6[6] => Selector1.IN9
D6[7] => Selector0.IN9
clk => E~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
RS <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
RW <= <GND>
E <= E~reg0.DB_MAX_OUTPUT_PORT_TYPE
DB[0] <= Selector7.DB_MAX_OUTPUT_PORT_TYPE
DB[1] <= Selector6.DB_MAX_OUTPUT_PORT_TYPE
DB[2] <= Selector5.DB_MAX_OUTPUT_PORT_TYPE
DB[3] <= Selector4.DB_MAX_OUTPUT_PORT_TYPE
DB[4] <= Selector3.DB_MAX_OUTPUT_PORT_TYPE
DB[5] <= Selector2.DB_MAX_OUTPUT_PORT_TYPE
DB[6] <= Selector1.DB_MAX_OUTPUT_PORT_TYPE
DB[7] <= Selector0.DB_MAX_OUTPUT_PORT_TYPE


|test|lcd_controller:inst6
estado[0] => Mux0.IN5
estado[0] => Mux1.IN5
estado[0] => Mux2.IN5
estado[0] => Mux3.IN5
estado[0] => Mux4.IN5
estado[0] => Mux5.IN5
estado[0] => Mux6.IN5
estado[1] => Mux0.IN4
estado[1] => Mux1.IN4
estado[1] => Mux2.IN4
estado[1] => Mux3.IN4
estado[1] => Mux4.IN4
estado[1] => Mux5.IN4
estado[1] => Mux6.IN4
D1[0] <= D1[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
D1[1] <= D1[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
D1[2] <= D1[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
D1[3] <= D1[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
D1[4] <= D1[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
D1[5] <= <GND>
D1[6] <= <VCC>
D1[7] <= <GND>
D2[0] <= D2[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
D2[1] <= D2[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
D2[2] <= D2[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
D2[3] <= D2[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
D2[4] <= D2[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
D2[5] <= <GND>
D2[6] <= <VCC>
D2[7] <= <GND>
D3[0] <= D3[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
D3[1] <= D3[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
D3[2] <= D3[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
D3[3] <= D3[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
D3[4] <= D3[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
D3[5] <= <GND>
D3[6] <= <VCC>
D3[7] <= <GND>
D4[0] <= D4[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
D4[1] <= D4[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
D4[2] <= <VCC>
D4[3] <= <VCC>
D4[4] <= <GND>
D4[5] <= <GND>
D4[6] <= <VCC>
D4[7] <= <GND>
D5[0] <= D5[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
D5[1] <= <GND>
D5[2] <= D5[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
D5[3] <= <GND>
D5[4] <= D5[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
D5[5] <= D5[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
D5[6] <= D5[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
D5[7] <= <GND>
D6[0] <= D6[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
D6[1] <= <GND>
D6[2] <= D6[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
D6[3] <= D6[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
D6[4] <= <GND>
D6[5] <= D6[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
D6[6] <= D6[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
D6[7] <= <GND>


|test|buzzer_controller:instX
estado[0] => Mux1.IN5
estado[0] => Mux0.IN5
estado[1] => Mux1.IN4
estado[1] => Mux0.IN4
clk => sinal~reg0.CLK
clk => cont2[0].CLK
clk => cont2[1].CLK
clk => cont2[2].CLK
clk => cont2[3].CLK
clk => cont2[4].CLK
clk => cont2[5].CLK
clk => cont2[6].CLK
clk => cont2[7].CLK
clk => cont2[8].CLK
clk => cont2[9].CLK
clk => cont2[10].CLK
clk => cont2[11].CLK
clk => cont2[12].CLK
clk => cont2[13].CLK
clk => cont2[14].CLK
clk => cont2[15].CLK
clk => cont2[16].CLK
clk => cont2[17].CLK
clk => cont2[18].CLK
clk => cont2[19].CLK
clk => cont2[20].CLK
clk => cont2[21].CLK
clk => cont2[22].CLK
clk => cont2[23].CLK
clk => cont2[24].CLK
clk => cont2[25].CLK
clk => aciona.CLK
clk => cont[0].CLK
clk => cont[1].CLK
clk => cont[2].CLK
clk => cont[3].CLK
clk => cont[4].CLK
clk => cont[5].CLK
clk => cont[6].CLK
clk => cont[7].CLK
clk => cont[8].CLK
clk => cont[9].CLK
clk => cont[10].CLK
clk => cont[11].CLK
clk => cont[12].CLK
clk => cont[13].CLK
clk => cont[14].CLK
clk => cont[15].CLK
clk => cont[16].CLK
clk => cont[17].CLK
clk => cont[18].CLK
clk => cont[19].CLK
clk => cont[20].CLK
clk => cont[21].CLK
clk => cont[22].CLK
clk => cont[23].CLK
clk => cont[24].CLK
clk => cont[25].CLK
sinal <= sinal~reg0.DB_MAX_OUTPUT_PORT_TYPE


